---
import StackBadge from './StackBadge.astro';
import { TAGS } from '../utils/tags';
import type { ITag } from '../interfaces/tags.interface';
interface Props {
  date: string;
  title: string;
  responsabilities: string;
  goals: string;
  selectedTags?: ITag[];
  tags?:boolean;
}
const { date, title, responsabilities, goals, selectedTags, tags } = Astro.props;
---

<div
  class="absolute w-3 h-3 bg-gray-200 rounded-full mt-1.5 -start-1.5 border border-white dark:border-gray-900 dark:bg-gray-700"
>
</div>
<time class="mb-1 text-sm font-normal leading-none text-sky-200/90">{date}</time
>
<h3 class="text-lg font-semibold mt-2 text-yellow-400">
  {title}
</h3>
<p class="mb-4 text-base font-normal text-pretty whitespace-pre">
  Responsabilidades:
  {responsabilities}
  Logros:
  {goals}
</p>
{
  tags && (
    <p class="mb-2">Pila Técnica</p>
    <article class="flex gap-x-2">
      <StackBadge className={TAGS.angular.className}>
        {TAGS.angular.name}
        <TAGS.angular.icon class="size-4"/>
      </StackBadge>
      <StackBadge className={TAGS.laravel.className}>
        {TAGS.laravel.name}
        <TAGS.laravel.icon class="size-4"/>
      </StackBadge>
      <StackBadge className={TAGS.typescript.className}>
        {TAGS.typescript.name}
        <TAGS.typescript.icon class="size-4"/>
      </StackBadge>
      <StackBadge className={TAGS.php.className}>
        <TAGS.php.icon class="size-4"/>
      </StackBadge>
      <StackBadge className={TAGS.mysql.className}>
        {TAGS.mysql.name}
        <TAGS.mysql.icon class="size-4"/>
      </StackBadge>
      <StackBadge className={TAGS.tailwind.className}>
        {TAGS.tailwind.name}
        <TAGS.tailwind.icon class="size-4"/>
      </StackBadge>
      <StackBadge className={TAGS.bootstrap.className}>
        {TAGS.bootstrap.name}
        <TAGS.bootstrap.icon class="size-4"/>
      </StackBadge>
      <StackBadge className={TAGS.git.className}>
        {TAGS.git.name}
        <TAGS.git.icon class="size-4"/>
      </StackBadge>
      <StackBadge className={TAGS.github.className}>
        {TAGS.github.name}
        <TAGS.github.icon class="size-4"/>
      </StackBadge>
    </article>
    
  )
}
{
  selectedTags?.length && (
    <p class="mb-2">Pila Técnica</p>
    <article class="flex gap-x-2">
      {
        selectedTags.map(tag => (
            <StackBadge className={tag.className}>
              {tag.name !== 'Php' ? tag.name : ''}
              <tag.icon class="size-4"/>
            </StackBadge>
        ))
      }
    </article>
  )
}
